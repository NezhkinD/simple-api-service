name: Build and Test

on:
    push:
        branches-ignore:
            - main  # Исключаем векту main
    pull_request:

jobs:
    build-and-test:
        strategy:
            matrix:
                os: [ ubuntu-latest, macos-latest ]  # Добавляем ОС
        runs-on: ${{ matrix.os }}  # Используем текущую ОС из матрицы

        steps:
            # Клонируем репозиторий
            -   name: Checkout code
                uses: actions/checkout@v3

            # Устанавливаем docker-compose (только для Linux)
            -   name: Set up Docker Compose
                if: runner.os == 'Linux'
                run: |
                    sudo apt-get update
                    sudo apt-get install -y docker-compose

            # Устанавливаем docker и docker-compose на macOS
            # Ожидаем запуска docker-compose
            -   name: Install Docker on macOS
                if: runner.os == 'macOS'
                run: |
                    brew install php
                    brew install composer

            # Показать список файлов
            -   name: List repository files
                run: ls -R

            # Сборка контейнеров через docker-compose
            -   name: Build Docker containers
                if: runner.os == 'Linux'
                run: docker-compose -f docker-compose.yaml build

            # Запускаем сервисы через docker-compose
            -   name: Start Docker Compose services
                if: runner.os == 'Linux'
                run: docker-compose -f docker-compose.yaml up -d

            # Установка зависимостей через Composer
            -   name: Install dependencies
                if: runner.os == 'Linux'
                run: docker exec sas_php composer install

            # Запуск тестов
            -   name: Run PHPUnit tests
                if: runner.os == 'Linux'
                run: docker exec sas_php php bin/phpunit

            # Остановка и удаление контейнеров
            -   name: Stop and clean up Docker Compose
                if: always() && runner.os == 'Linux'
                run: docker-compose -f docker-compose.yaml down
